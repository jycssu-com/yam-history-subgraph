type Account @entity {
  id: ID!
  address: Bytes!
  offers: [Offer!]!
  offersCount: BigInt!
  transactions: [Transaction!]!
  transactionsCount: BigInt!

  purchases: [Transaction!]!
  purchasesCount: BigInt!
  sales: [Transaction!]!
  salesCount: BigInt!
  swaps: [Transaction!]!
  swapsCount: BigInt!

  balances: [AccountBalance!]! @derivedFrom(field: "account")
  balancesCount: BigInt!
  allowances: [AccountAllowance!]! @derivedFrom(field: "account")
  allowancesCount: BigInt!

  historyMonths: [AccountMonth!]! @derivedFrom(field: "account")
  historyMonthsCount: BigInt!
}

type AccountBalance @entity {
  id: ID!
  account: Account!
  token: Token!
  balance: BigInt!
  updatedAtBlock: BigInt
  updatedAtTimestamp: BigInt
}

type AccountAllowance @entity {
  id: ID!
  account: Account!
  token: Token!
  allowance: BigInt!
  updatedAtBlock: BigInt
  updatedAtTimestamp: BigInt
}

type AccountMonth @entity {
  # <accountAddress>-<year>-<month>
  id: ID!
  account: Account!
  year: String!
  month: String!
  createdOffersCount: BigInt!
  updatedOffersCount: BigInt!
  deletedOffersCount: BigInt!
  purchasesCount: BigInt!
  salesCount: BigInt!
  swapsCount: BigInt!
  transactionsCount: BigInt!
}

enum TokenType {
  NOTWHITELISTEDTOKEN
  REALTOKEN
  ERC20WITHPERMIT
  ERC20WITHOUTPERMIT
  NATIVETOKEN
}

type Token @entity {
  id: ID!
  address: Bytes!
  type: TokenType!
  decimals: BigInt!
  name: String!
  symbol: String!

  offers: [Offer!]!
  offersCount: BigInt!
  transactions: [Transaction!]!
  transactionsCount: BigInt!

  volume: BigInt!
  volumes: [TokenVolume!]! @derivedFrom(field: "parentToken")
  volumesCount: BigInt!

  historyDays: [TokenDay!]! @derivedFrom(field: "token")
  historyDaysCount: BigInt!
  historyMonths: [TokenMonth!]! @derivedFrom(field: "token")
  historyMonthsCount: BigInt!
}

type TokenVolume @entity {
  # <parentTokenAddress>-<tokenAddress>
  id: ID!
  parentToken: Token!
  quantity: BigInt!
  token: Token!
  volume: BigInt!

  volumeDays: [TokenVolumeDay!]! @derivedFrom(field: "parent")
  volumeDaysCount: BigInt!
  volumeMonths: [TokenVolumeMonth!]! @derivedFrom(field: "parent")
  volumeMonthsCount: BigInt!
}

type TokenVolumeDay @entity {
  # <parentTokenAddress>-<tokenAddress>-<year>-<month>-<day>
  id: ID!
  date: String!
  year: String!
  month: String!
  day: String!

  parent: TokenVolume!
  quantity: BigInt!
  volume: BigInt!
}

type TokenVolumeMonth @entity {
  # <parentTokenAddress>-<tokenAddress>-<year>-<month>
  id: ID!
  date: String!
  year: String!
  month: String!

  parent: TokenVolume!
  quantity: BigInt!
  volume: BigInt!
}

type TokenDay @entity {
  # <tokenAddress>-<year>-<month>-<day>
  id: ID!
  token: Token!
  year: String!
  month: String!
  day: String!
  createdOffersCount: BigInt!
  updatedOffersCount: BigInt!
  deletedOffersCount: BigInt!
  transactionsCount: BigInt!
  volume: BigInt!
}

type TokenMonth @entity {
  # <tokenAddress>-<year>-<month>
  id: ID!
  token: Token!
  year: String!
  month: String!
  createdOffersCount: BigInt!
  updatedOffersCount: BigInt!
  deletedOffersCount: BigInt!
  transactionsCount: BigInt!
  volume: BigInt!
}

type OfferPrice @entity(immutable: true) {
  id: ID!
  offer: Offer!
  price: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

enum OfferQuantityOrigin {
  OfferCreated
  OfferUpdated
  OfferDeleted
  OfferAccepted
}

type OfferQuantity @entity(immutable: true) {
  id: ID!
  offer: Offer!
  quantity: BigInt!
  origin: OfferQuantityOrigin!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

enum TransactionType {
  REALTOKENTOREALTOKEN
  REALTOKENTOERC20
  ERC20TOREALTOKEN
  ERC20TOERC20
}

type Transaction @entity(immutable: true) {
  id: ID!
  type: TransactionType!
  offer: Offer!
  taker: Account!
  price: BigInt!
  quantity: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

enum OfferType {
  REALTOKENTOREALTOKEN
  REALTOKENTOERC20
  ERC20TOREALTOKEN
  ERC20TOERC20
}

type Offer @entity {
  id: ID!
  type: OfferType!
  maker: Account!
  taker: Account
  isPrivate: Boolean!
  isActive: Boolean!
  offerToken: Token!
  buyerToken: Token!
  price: BigInt!
  prices: [OfferPrice!]! @derivedFrom(field: "offer")
  pricesCount: BigInt!
  quantityAvailable: BigInt!
  quantity: BigInt!
  quantities: [OfferQuantity!]! @derivedFrom(field: "offer")
  quantitiesCount: BigInt!
  transactions: [Transaction!]! @derivedFrom(field: "offer")
  transactionsCount: BigInt!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
  removedAtBlock: BigInt
  removedAtTimestamp: BigInt
  updatedAtBlock: BigInt
  updatedAtTimestamp: BigInt
}

type StatisticDay @entity {
  id: ID!
  year: String!
  month: String!
  day: String!

  offersCreatedCount: BigInt!
  offersDeletedCount: BigInt!
  offersAcceptedCount: BigInt!
  offersWithPriceChangesCount: BigInt!
  offersPrivateCount: BigInt!
  offersActiveCount: BigInt!

  accountsCount: BigInt!
  accountsWithOffersCount: BigInt!
  accountsWithSalesCount: BigInt!
  accountsWithPurchasesCount: BigInt!
  accountsWithSwapsCount: BigInt!

  transactionsCount: BigInt!
  tokensCount: BigInt!

  realTokenTradeVolume: BigInt!
}

type CumulativeStatisticDay @entity {
  id: ID!
  year: String!
  month: String!
  day: String!

  offersCreatedCount: BigInt!
  offersDeletedCount: BigInt!
  offersAcceptedCount: BigInt!
  offersWithPriceChangesCount: BigInt!
  offersPrivateCount: BigInt!
  offersActiveCount: BigInt!

  accountsCount: BigInt!
  accountsWithOffersCount: BigInt!
  accountsWithSalesCount: BigInt!
  accountsWithPurchasesCount: BigInt!
  accountsWithSwapsCount: BigInt!

  transactionsCount: BigInt!
  tokensCount: BigInt!

  realTokenTradeVolume: BigInt!
}

type StatisticMonth @entity {
  id: ID!
  year: String!
  month: String!

  offersCreatedCount: BigInt!
  offersDeletedCount: BigInt!
  offersAcceptedCount: BigInt!
  offersWithPriceChangesCount: BigInt!
  offersPrivateCount: BigInt!
  offersActiveCount: BigInt!

  accountsCount: BigInt!
  accountsWithOffersCount: BigInt!
  accountsWithSalesCount: BigInt!
  accountsWithPurchasesCount: BigInt!
  accountsWithSwapsCount: BigInt!

  transactionsCount: BigInt!
  tokensCount: BigInt!

  realTokenTradeVolume: BigInt!
}

type CumulativeStatisticMonth @entity {
  id: ID!
  year: String!
  month: String!

  offersCreatedCount: BigInt!
  offersDeletedCount: BigInt!
  offersAcceptedCount: BigInt!
  offersWithPriceChangesCount: BigInt!
  offersPrivateCount: BigInt!
  offersActiveCount: BigInt!

  accountsCount: BigInt!
  accountsWithOffersCount: BigInt!
  accountsWithSalesCount: BigInt!
  accountsWithPurchasesCount: BigInt!
  accountsWithSwapsCount: BigInt!

  transactionsCount: BigInt!
  tokensCount: BigInt!

  realTokenTradeVolume: BigInt!
}

type LastCumulativeStatistic @entity {
  id: ID!
  lastCumulativeStatisticDay: CumulativeStatisticDay
  lastCumulativeStatisticMonth: CumulativeStatisticMonth
}
